name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  DATABASE_URL: "postgres://postgres:postgres@localhost/crdb-test"

jobs:
  just-test:
    strategy:
      matrix:
        type:
          - { name: Build, command: --no-dev-deps build }
          - { name: Clippy, command: --no-dev-deps clippy -- -D warnings }
          - { name: Test, command: nextest run }
        rust:
          - { name: Nightly }
          - { name: Stable, sigil: "+stable" }
          - { name: MSRV, sigil: "+1.75.0" }
        include:
          - name_override: Tests
            command_override: just test
    name: ${{ matrix.name_override || (matrix.type.name + " All Features ( " + matrix.rust.name + ")") }}
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Install cargo dependencies
      - uses: taiki-e/install-action@6943331e01261cdff7420bbc2508cb463574e404
        with:
          tool: just, cargo-nextest, cargo-hack, sqlx-cli, wasm-bindgen-cli

      # Setup sccache, that'll share build artifacts with all the target directories
      - uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd
      - run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      # Setup chromedriver for client-js tests
      - uses: nanasess/setup-chromedriver@42cc2998329f041de87dc3cfa33a930eacd57eaa
      - run: sudo Xvfb -ac :0 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      # Setup postgresql for server tests
      - uses: ikalnytskyi/action-setup-postgres@74e396491e76c84f8ad92a4f5a69ab0deb75bbc2
        with:
          username: postgres
          password: postgres
          database: crdb-test
      - run: sqlx migrate run --source crdb-postgres/migrations

      # Run the tests
      - run: ${{ matrix.command_override || ("cargo " + matrix.rust.sigil + " hack --workspace --feature-powerset " + matrix.test.command) }}

  just-clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@6943331e01261cdff7420bbc2508cb463574e404
        with:
          tool: just
      - run: just clippy

  just-udeps:
    name: Udeps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@6943331e01261cdff7420bbc2508cb463574e404
        with:
          tool: just, cargo-hack, cargo-udeps
      - run: just udeps-full

  just-doc:
    name: Doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@6943331e01261cdff7420bbc2508cb463574e404
        with:
          tool: just
      - run: just doc
